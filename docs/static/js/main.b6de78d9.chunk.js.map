{"version":3,"sources":["components/Task.js","components/Tasks.js","components/TaskForm.js","components/Posts.js","App.js","reportWebVitals.js","index.js"],"names":["Task","fontSize","color","this","props","task","done","style","StyleCompleted","title","description","id","type","onChange","checkDone","bind","btnDelete","onClick","deleteTask","Component","borderRadius","Tasks","tasks","map","state","onSubmit","e","addTask","preventDefault","setState","target","name","value","placeholder","Posts","posts","a","fetch","res","json","data","post","body","App","newTask","length","newTasks","filter","to","className","exact","path","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6de78d9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Task extends Component {\n  StyleCompleted() {\n    return {\n      fontSize: \"20px\",\n      color: this.props.task.done ? \"gray\" : \"red\",\n    };\n  }\n\n  render() {\n    const { task } = this.props;\n    return (\n      <div style={this.StyleCompleted()}>\n        {task.title} -{task.description} - {task.done} -{task.id}\n        <input\n          type=\"checkbox\"\n          onChange={this.props.checkDone.bind(this, task.id)}\n        />\n        <button\n          style={btnDelete}\n          onClick={this.props.deleteTask.bind(this, task.id)}\n        >\n          X\n        </button>\n      </div>\n    );\n  }\n}\n\nTask.propTypes = {\n  task: PropTypes.object.isRequired,\n};\n\nconst btnDelete = {\n  fontSize: \"18px\",\n  borderRadius: \"50%\",\n};\n","import React, { Component } from \"react\";\nimport Task from \"./Task\";\nimport PropTypes from \"prop-types\";\n\nexport default class Tasks extends Component {\n  render() {\n    return this.props.tasks.map((task) => (\n      <div>\n        <Task\n          task={task}\n          key={task.id}\n          deleteTask={this.props.deleteTask}\n          checkDone={this.props.checkDone}\n        />\n      </div>\n    ));\n  }\n}\n\nTasks.propTypes = {\n  tasks: PropTypes.array.isRequired,\n};\n","import React, { Component } from \"react\";\n\nexport default class Task extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n  };\n  //   addTask = (title, description) => {\n  //     console.log(title, description);\n  //   };\n  onSubmit = (e) => {\n    this.props.addTask(this.state.title, this.state.description);\n    e.preventDefault();\n  };\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n  render() {\n    // this.props.addTask(\"title one\", \"description one\");\n    return (\n      <form onSubmit={this.onSubmit}>\n        <h1>Formulario de tareas:</h1>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Escribe una tarea\"\n          onChange={this.onChange}\n          value={this.state.title}\n        ></input>\n        <br />\n        <br />\n        <textarea\n          name=\"description\"\n          placeholder=\"Escribe una descripción\"\n          onChange={this.onChange}\n          value={this.state.description}\n        ></textarea>\n        <br />\n        <input type=\"submit\" />\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Posts extends Component {\n  state = {\n    posts: [],\n  };\n  async componentDidMount() {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n    const data = await res.json();\n    this.setState({ posts: data });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Post</h1>\n        {this.state.posts.map((post) => {\n          return (\n            <div key={post.id}>\n              <h2>{post.title}</h2>\n              <p>{post.body}</p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport tasks from \"./sample/tasks.json\";\nimport Tasks from \"./components/Tasks\";\nimport TaskForm from \"./components/TaskForm\";\nimport Posts from \"./components/Posts\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    tasks: tasks,\n  };\n\n  addTask = (title, description) => {\n    const newTask = {\n      title: title,\n      description: description,\n      id: this.state.tasks.length,\n    };\n    this.setState({\n      tasks: [...this.state.tasks, newTask],\n    });\n  };\n\n  deleteTask = (id) => {\n    const newTasks = this.state.tasks.filter((task) => task.id !== id);\n    this.setState({ tasks: newTasks });\n  };\n\n  checkDone = (id) => {\n    const newTasks = this.state.tasks.map((task) => {\n      if (task.id === id) {\n        task.done = !task.done;\n      }\n      return task;\n    });\n    this.setState({ tasks: newTasks });\n  };\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <Link to=\"/\">Home</Link>\n          <br />\n          <Link to=\"/posts\">Posts</Link>\n          <h1 className=\"titulo\">Práctica con React:</h1>\n          <li>\n            Lo que hacemos aquí es si escribes una tarea - descripción y pulsas\n            enviar... añadirá un párrafo al final de los tres ya pintados\n          </li>\n          <br />\n          <li>\n            Si pulsas encima del checkbox... cambiará el estilo del párrafo\n          </li>\n          <br />\n          <li>\n            Si pulsas encima del botón X, lo que hace será eliminar el contenido\n            del párrafo\n          </li>\n          <br />\n          <li>\n            Y si pulsas encima de Home, se irá a esta página o si pulsas encima\n            de Posts, irá a una donde recoge unos datos posts de un json y\n            devuelve una cadena de titulos y su cuerpo\n          </li>\n          <br />\n\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return (\n                <div>\n                  <TaskForm addTask={this.addTask} />\n                  <h1>Tareas:</h1>\n                  <Tasks\n                    tasks={this.state.tasks}\n                    deleteTask={this.deleteTask}\n                    checkDone={this.checkDone}\n                  />\n                </div>\n              );\n            }}\n          ></Route>\n          <Route path=\"/posts\" component={Posts} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}